get_data.py副本

import requests
from lxml import etree

urls = "http://www.pharmnet.com.cn/tcm/knowledge/detail/127633.html"
str1 = "http://www.pharmnet.com.cn/tcm/knowledge/detail/1276"
type_name = ["草部一", "草部二", "草部三", "木部", "土部", "火部", "谷部", "果部", "鳞部", "兽部", "禽部", "虫部",
             "介部", "菜部", "水部", "人部", "金石部"]  # number = 17
url = []
for i in range(35, 52):
    url.append(str1 + str(i) + ".html")
response = []
result = []
for i in range(0, 17):
    response.append(i)
    response[i] = requests.get(url[i])
    html = etree.HTML(response[i].text)
    result.append(html.xpath('//div[@align="left"]/text()'))
    print(result[i])
# print(response[0].text)

DATABASE_URL="postgres://${neo4j}:${neo4j}@${127.0.0.1}:${7687}/${neo4j}?sslmode=disable"
python manage.py create_admin --noinput --username "admin" --email "xx.glob@outlook.com" --password "admin"
yur5iy7fttr

doccano createuser --username root --password root


导入实体
LOAD CSV WITH HEADERS  FROM "file:///entity_1.csv" AS line
MERGE (z:分类{分类:line.分类})

LOAD CSV WITH HEADERS  FROM "file:///entity_2.csv" AS line
MERGE (z:名称{名称:line.名称})

LOAD CSV WITH HEADERS  FROM "file:///entity_3.csv" AS line
MERGE (z:补充{补充:line.补充})

LOAD CSV WITH HEADERS  FROM "file:///entity_4.csv" AS line
MERGE (z:症状{症状:line.症状})

LOAD CSV WITH HEADERS  FROM "file:///entity_5.csv" AS line
MERGE (z:步骤{步骤:line.步骤})



MATCH (from:名称{名称:line.from}),(to:分类{分类:line.to})
MATCH (from:名称{名称:line.from}),(to:名称{名称:line.to})
MATCH (from:名称{名称:line.from}),(to:补充{补充:line.to})
MATCH (from:名称{名称:line.from}),(to:症状{症状:line.to})
MATCH (from:症状{症状:line.from}),(to:步骤{步骤:line.to})
MATCH (from:症状{症状:line.from}),(to:症状{症状:line.to})
MATCH (from:名称{名称:line.from}),(to:名称{名称:line.to})


LOAD CSV WITH HEADERS FROM "file:///relation.csv" AS line
MATCH (from:名称{名称:line.from}),(to:分类{分类:line.to})
merge (from)-[r:属于{relation:line.relation}]->(to)

LOAD CSV WITH HEADERS FROM "file:///relation.csv" AS line
MATCH (from:名称{名称:line.from}),(to:名称{名称:line.to})
merge (from)-[r:别名{relation:line.relation}]->(to)

LOAD CSV WITH HEADERS FROM "file:///relation.csv" AS line
MATCH (from:名称{名称:line.from}),(to:补充{补充:line.to})
merge (from)-[r:性状{relation:line.relation}]->(to)

LOAD CSV WITH HEADERS FROM "file:///relation.csv" AS line
MATCH (from:名称{名称:line.from}),(to:症状{症状:line.to})
merge (from)-[r:主治{relation:line.relation}]->(to)

LOAD CSV WITH HEADERS FROM "file:///relation.csv" AS line
MATCH (from:症状{症状:line.from}),(to:步骤{步骤:line.to})
merge (from)-[r:用法{relation:line.relation}]->(to)

LOAD CSV WITH HEADERS FROM "file:///relation.csv" AS line
MATCH (from:症状{症状:line.from}),(to:症状{症状:line.to})
merge (from)-[r:属于{relation:line.relation}]->(to)

LOAD CSV WITH HEADERS FROM "file:///relation.csv" AS line
MATCH (from:名称{名称:line.from}),(to:名称{名称:line.to})
merge (from)-[r:属于{relation:line.relation}]->(to)






导入实体

LOAD CSV WITH HEADERS  FROM "file:///entity_2.csv" AS line
MERGE (z:med{name:line.名称,category:line.分类})

LOAD CSV WITH HEADERS  FROM "file:///entity_3.csv" AS line
MERGE (z:add{name:line.补充})

LOAD CSV WITH HEADERS  FROM "file:///entity_4.csv" AS line
MERGE (z:symptom{name:line.症状})

LOAD CSV WITH HEADERS  FROM "file:///entity_5.csv" AS line
MERGE (z:step{name:line.步骤})


LOAD CSV WITH HEADERS FROM "file:///relation.csv" AS line
MATCH (from:med{name:line.from}),(to:med{name:line.to})
merge (from)-[r:别名{relation:line.relation}]->(to)

LOAD CSV WITH HEADERS FROM "file:///relation.csv" AS line
MATCH (from:med{name:line.from}),(to:add{name:line.to})
merge (from)-[r:性状{relation:line.relation}]->(to)

LOAD CSV WITH HEADERS FROM "file:///relation.csv" AS line
MATCH (from:med{name:line.from}),(to:symptom{name:line.to})
merge (from)-[r:主治{relation:line.relation}]->(to)

LOAD CSV WITH HEADERS FROM "file:///relation.csv" AS line
MATCH (from:symptom{name:line.from}),(to:step{name:line.to})
merge (from)-[r:用法{relation:line.relation}]->(to)

LOAD CSV WITH HEADERS FROM "file:///relation.csv" AS line
MATCH (from:symptom{name:line.from}),(to:symptom{name:line.to})
merge (from)-[r:属于{relation:line.relation}]->(to)



import csv
import jsonlines

entity = {1: '分类', 2: '名称', 3: '补充', 4: '症状', 5: '步骤'}
entity_1 = open('data/entity_1.csv', 'w', encoding='UTF-8', newline='')
entity_2 = open('data/entity_2.csv', 'w', encoding='UTF-8', newline='')
entity_3 = open('data/entity_3.csv', 'w', encoding='UTF-8', newline='')
entity_4 = open('data/entity_4.csv', 'w', encoding='UTF-8', newline='')
entity_5 = open('data/entity_5.csv', 'w', encoding='UTF-8', newline='')
relations = open('data/relation.csv', 'w', encoding='UTF-8', newline='')
e1 = csv.writer(entity_1)
e2 = csv.writer(entity_2)
e3 = csv.writer(entity_3)
e4 = csv.writer(entity_4)
e5 = csv.writer(entity_5)
re = csv.writer(relations)
e1.writerow([entity[1]])
e2.writerow([entity[2]])
e3.writerow([entity[3]])
e4.writerow([entity[4]])
e5.writerow([entity[5]])
re.writerow(['from', 'to', 'relation'])




with jsonlines.open('data/root.jsonl') as fp:
    for line in fp:
        Map = {}
        entityMap = {}
        Id = line['id']
        Text = line['text']
        Entities = line['entities']
        Relations = line['relations']
        for index, value in enumerate(Text):
            Map[index] = value
        for values in Entities:
            text = ''
            for index in range(values['start_offset'], values['end_offset']):
                text += Map[index]
            entityMap[values['id']] = text
            if values['label'] == entity[1]:
                e1.writerow([text])
            elif values['label'] == entity[2]:
                e2.writerow([text])
            elif values['label'] == entity[3]:
                e3.writerow([text])
            elif values['label'] == entity[4]:
                e4.writerow([text])
            elif values['label'] == entity[5]:
                e5.writerow([text])
        for values in Relations:
            re.writerow([entityMap[values['from_id']], entityMap[values['to_id']], values['type']])

fp.close()


            <li  class="right"><div class="right-img"><img src="../static/images/user.png" alt=""></div><div class="right-inf">hello world!</div><br></li>
            <li  class="left"><div class="left-img"><img src="../static/images/agent.png" alt=""></div><div class="left-inf">hello world!</div><br></li>